/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.model.ColumnInfo;
import io.swagger.model.VoltTableBuffer;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * VoltTable
 */
@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2024-02-19T21:28:12.651360Z[Europe/Dublin]")
public class VoltTable   {
  @JsonProperty("buffer")
  private VoltTableBuffer buffer = null;

  @JsonProperty("rowCount")
  private Integer rowCount = null;

  @JsonProperty("columnCount")
  private Integer columnCount = null;

  @JsonProperty("serializedSize")
  private Integer serializedSize = null;

  @JsonProperty("tableSchema")
  private List<ColumnInfo> tableSchema = null;

  @JsonProperty("statusCode")
  private byte[] statusCode = null;

  @JsonProperty("rawRow")
  private VoltTableBuffer rawRow = null;

  @JsonProperty("row")
  private String row = null;

  @JsonProperty("activeRowIndex")
  private Integer activeRowIndex = null;

  @JsonProperty("rowObjects")
  private List<Object> rowObjects = null;

  public VoltTable buffer(VoltTableBuffer buffer) {
    this.buffer = buffer;
    return this;
  }

  /**
   * Get buffer
   * @return buffer
   **/
  @JsonProperty("buffer")
  @Schema(description = "")
  @Valid
  public VoltTableBuffer getBuffer() {
    return buffer;
  }

  public void setBuffer(VoltTableBuffer buffer) {
    this.buffer = buffer;
  }

  public VoltTable rowCount(Integer rowCount) {
    this.rowCount = rowCount;
    return this;
  }

  /**
   * Get rowCount
   * @return rowCount
   **/
  @JsonProperty("rowCount")
  @Schema(description = "")
  public Integer getRowCount() {
    return rowCount;
  }

  public void setRowCount(Integer rowCount) {
    this.rowCount = rowCount;
  }

  public VoltTable columnCount(Integer columnCount) {
    this.columnCount = columnCount;
    return this;
  }

  /**
   * Get columnCount
   * @return columnCount
   **/
  @JsonProperty("columnCount")
  @Schema(description = "")
  public Integer getColumnCount() {
    return columnCount;
  }

  public void setColumnCount(Integer columnCount) {
    this.columnCount = columnCount;
  }

  public VoltTable serializedSize(Integer serializedSize) {
    this.serializedSize = serializedSize;
    return this;
  }

  /**
   * Get serializedSize
   * @return serializedSize
   **/
  @JsonProperty("serializedSize")
  @Schema(description = "")
  public Integer getSerializedSize() {
    return serializedSize;
  }

  public void setSerializedSize(Integer serializedSize) {
    this.serializedSize = serializedSize;
  }

  public VoltTable tableSchema(List<ColumnInfo> tableSchema) {
    this.tableSchema = tableSchema;
    return this;
  }

  public VoltTable addTableSchemaItem(ColumnInfo tableSchemaItem) {
    if (this.tableSchema == null) {
      this.tableSchema = new ArrayList<ColumnInfo>();
    }
    this.tableSchema.add(tableSchemaItem);
    return this;
  }

  /**
   * Get tableSchema
   * @return tableSchema
   **/
  @JsonProperty("tableSchema")
  @Schema(description = "")
  @Valid
  public List<ColumnInfo> getTableSchema() {
    return tableSchema;
  }

  public void setTableSchema(List<ColumnInfo> tableSchema) {
    this.tableSchema = tableSchema;
  }

  public VoltTable statusCode(byte[] statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  /**
   * Get statusCode
   * @return statusCode
   **/
  @JsonProperty("statusCode")
  @Schema(description = "")
  public byte[] getStatusCode() {
    return statusCode;
  }

  public void setStatusCode(byte[] statusCode) {
    this.statusCode = statusCode;
  }

  public VoltTable rawRow(VoltTableBuffer rawRow) {
    this.rawRow = rawRow;
    return this;
  }

  /**
   * Get rawRow
   * @return rawRow
   **/
  @JsonProperty("rawRow")
  @Schema(description = "")
  @Valid
  public VoltTableBuffer getRawRow() {
    return rawRow;
  }

  public void setRawRow(VoltTableBuffer rawRow) {
    this.rawRow = rawRow;
  }

  public VoltTable row(String row) {
    this.row = row;
    return this;
  }

  /**
   * Get row
   * @return row
   **/
  @JsonProperty("row")
  @Schema(description = "")
  public String getRow() {
    return row;
  }

  public void setRow(String row) {
    this.row = row;
  }

  public VoltTable activeRowIndex(Integer activeRowIndex) {
    this.activeRowIndex = activeRowIndex;
    return this;
  }

  /**
   * Get activeRowIndex
   * @return activeRowIndex
   **/
  @JsonProperty("activeRowIndex")
  @Schema(description = "")
  public Integer getActiveRowIndex() {
    return activeRowIndex;
  }

  public void setActiveRowIndex(Integer activeRowIndex) {
    this.activeRowIndex = activeRowIndex;
  }

  public VoltTable rowObjects(List<Object> rowObjects) {
    this.rowObjects = rowObjects;
    return this;
  }

  public VoltTable addRowObjectsItem(Object rowObjectsItem) {
    if (this.rowObjects == null) {
      this.rowObjects = new ArrayList<Object>();
    }
    this.rowObjects.add(rowObjectsItem);
    return this;
  }

  /**
   * Get rowObjects
   * @return rowObjects
   **/
  @JsonProperty("rowObjects")
  @Schema(description = "")
  public List<Object> getRowObjects() {
    return rowObjects;
  }

  public void setRowObjects(List<Object> rowObjects) {
    this.rowObjects = rowObjects;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VoltTable voltTable = (VoltTable) o;
    return Objects.equals(this.buffer, voltTable.buffer) &&
        Objects.equals(this.rowCount, voltTable.rowCount) &&
        Objects.equals(this.columnCount, voltTable.columnCount) &&
        Objects.equals(this.serializedSize, voltTable.serializedSize) &&
        Objects.equals(this.tableSchema, voltTable.tableSchema) &&
        Objects.equals(this.statusCode, voltTable.statusCode) &&
        Objects.equals(this.rawRow, voltTable.rawRow) &&
        Objects.equals(this.row, voltTable.row) &&
        Objects.equals(this.activeRowIndex, voltTable.activeRowIndex) &&
        Objects.equals(this.rowObjects, voltTable.rowObjects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buffer, rowCount, columnCount, serializedSize, tableSchema, statusCode, rawRow, row, activeRowIndex, rowObjects);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VoltTable {\n");
    
    sb.append("    buffer: ").append(toIndentedString(buffer)).append("\n");
    sb.append("    rowCount: ").append(toIndentedString(rowCount)).append("\n");
    sb.append("    columnCount: ").append(toIndentedString(columnCount)).append("\n");
    sb.append("    serializedSize: ").append(toIndentedString(serializedSize)).append("\n");
    sb.append("    tableSchema: ").append(toIndentedString(tableSchema)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    rawRow: ").append(toIndentedString(rawRow)).append("\n");
    sb.append("    row: ").append(toIndentedString(row)).append("\n");
    sb.append("    activeRowIndex: ").append(toIndentedString(activeRowIndex)).append("\n");
    sb.append("    rowObjects: ").append(toIndentedString(rowObjects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
